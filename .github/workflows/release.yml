name: Create Release

on: [workflow_dispatch]

jobs:
  lint-test:
    name: Run lint-test
    uses: ./.github/workflows/pr_checks.yml

  create-release-branch:
    runs-on: ubuntu-latest
    needs: [lint-test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create and push release branch
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git checkout -b release/${{ github.run_number }}
          git push origin release/${{ github.run_number }}

  create-release-docker:
    runs-on: ubuntu-latest
    needs: [create-release-branch]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: release/${{ github.run_number }}

      - name: Login YC with Yandex ID token
        run: docker login --username oauth --password ${{ secrets.YC_TOKEN }} cr.yandex

      - name: Create and push Docker images
        run: |
          docker build -t cr.yandex/${{ secrets.ID_CONTAINER_REGISTRY }}/app:${{ github.run_number }} .
          docker build -t cr.yandex/${{ secrets.ID_CONTAINER_REGISTRY }}/app:${{ github.run_number }}_latest .
          docker push cr.yandex/${{ secrets.ID_CONTAINER_REGISTRY }}/app:${{ github.run_number }}
          docker push cr.yandex/${{ secrets.ID_CONTAINER_REGISTRY }}/app:${{ github.run_number }}_latest

  create-tag:
    runs-on: ubuntu-latest
    needs: [create-release-docker]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: release/${{ github.run_number }}

      - name: Create and push tag
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git fetch --tags
          TAG=v${{ github.run_number }}
          git tag -a $TAG -m "Tagging version $TAG"
          git push origin $TAG

  create-issue:
    runs-on: ubuntu-latest
    needs: [create-tag]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: release/${{ github.run_number }}

      - name: Get previous tag and commit list
        id: changelog-info
        run: |
          previous_tag=$(git tag --sort=-creatordate | grep -v "v${{ github.run_number }}" | head -n 1)
          echo "previous_tag=$previous_tag" >> $GITHUB_ENV
          commits=$(git log $previous_tag..HEAD --pretty=format:'* %s' --abbrev-commit)
          echo "commits=$commits" >> $GITHUB_ENV

      - name: Create GitHub Issue
        uses: actions/github-script@v6
        with:
          script: |
            const version = `v${{ github.run_number }}`;
            const date = new Date().toISOString().split('T')[0];
            const author = context.actor;
            const dockerImage = `cr.yandex/${{ secrets.ID_CONTAINER_REGISTRY }}/app:${{ github.run_number }}`;
            const commits = process.env.commits;
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Release ${version}`,
              body: `**Release Date:** ${date}\n**Author:** ${author}\n**Version:** ${version}\n**Commits:**\n${commits}\n**Docker Image:**\n[${dockerImage}](https://cr.yandex/registry/${{ secrets.ID_CONTAINER_REGISTRY }}/${{ github.run_number }})`,
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-changelog:
    runs-on: ubuntu-latest
    needs: [create-issue]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update CHANGELOG.md and create a branch
        run: |
          new_version="${{ github.run_number }}"
          changelog_file="CHANGELOG.md"
          date=$(date +'%d-%m-%Y')
          branch_name="release/${new_version}"

          # Create new changelog entry
          echo -e "## $new_version - $date\n\n${{ env.commits }}\n\n$(cat $changelog_file)" > $changelog_file

          # Add and commit changes
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git checkout -b $branch_name
          git add $changelog_file
          git commit -m "Update CHANGELOG for version $new_version"
          git push origin $branch_name

      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const new_version = `${{ github.run_number }}`;
            const branch_name = `release/${new_version}`;
            const base = 'main';
            const title = `Update CHANGELOG for version ${new_version}`;
            const body = `This PR updates the CHANGELOG.md file with changes for version ${new_version}.`;

            github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              head: branch_name,
              base: base,
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
